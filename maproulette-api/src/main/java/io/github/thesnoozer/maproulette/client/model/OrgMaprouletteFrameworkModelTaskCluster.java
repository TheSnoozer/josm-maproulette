/*
 * MapRoulette API
 * API for MapRoulette enabling the creation and maintenance of MapRoulette challenges
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.thesnoozer.maproulette.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.thesnoozer.maproulette.client.model.OrgMaprouletteFrameworkModelPoint;
import io.github.thesnoozer.maproulette.client.model.OrgMaprouletteSessionSearchParameters;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * OrgMaprouletteFrameworkModelTaskCluster
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-08T21:39:00.063842+01:00[Europe/Berlin]")
public class OrgMaprouletteFrameworkModelTaskCluster {
  @JsonProperty("clusterId")
  private Integer clusterId = null;

  @JsonProperty("numberOfPoints")
  private Integer numberOfPoints = null;

  @JsonProperty("taskId")
  private Long taskId = null;

  @JsonProperty("taskStatus")
  private Integer taskStatus = null;

  @JsonProperty("taskPriority")
  private Integer taskPriority = null;

  @JsonProperty("params")
  private OrgMaprouletteSessionSearchParameters params = null;

  @JsonProperty("point")
  private OrgMaprouletteFrameworkModelPoint point = null;

  @JsonProperty("bounding")
  private String bounding = null;

  @JsonProperty("challengeIds")
  private List<Long> challengeIds = new ArrayList<>();

  @JsonProperty("geometries")
  private String geometries = null;

  public OrgMaprouletteFrameworkModelTaskCluster clusterId(Integer clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @Schema(required = true, description = "")
  public Integer getClusterId() {
    return clusterId;
  }

  public void setClusterId(Integer clusterId) {
    this.clusterId = clusterId;
  }

  public OrgMaprouletteFrameworkModelTaskCluster numberOfPoints(Integer numberOfPoints) {
    this.numberOfPoints = numberOfPoints;
    return this;
  }

   /**
   * Get numberOfPoints
   * @return numberOfPoints
  **/
  @Schema(required = true, description = "")
  public Integer getNumberOfPoints() {
    return numberOfPoints;
  }

  public void setNumberOfPoints(Integer numberOfPoints) {
    this.numberOfPoints = numberOfPoints;
  }

  public OrgMaprouletteFrameworkModelTaskCluster taskId(Long taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @Schema(description = "")
  public Long getTaskId() {
    return taskId;
  }

  public void setTaskId(Long taskId) {
    this.taskId = taskId;
  }

  public OrgMaprouletteFrameworkModelTaskCluster taskStatus(Integer taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public Integer getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(Integer taskStatus) {
    this.taskStatus = taskStatus;
  }

  public OrgMaprouletteFrameworkModelTaskCluster taskPriority(Integer taskPriority) {
    this.taskPriority = taskPriority;
    return this;
  }

   /**
   * Get taskPriority
   * @return taskPriority
  **/
  @Schema(description = "")
  public Integer getTaskPriority() {
    return taskPriority;
  }

  public void setTaskPriority(Integer taskPriority) {
    this.taskPriority = taskPriority;
  }

  public OrgMaprouletteFrameworkModelTaskCluster params(OrgMaprouletteSessionSearchParameters params) {
    this.params = params;
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @Schema(required = true, description = "")
  public OrgMaprouletteSessionSearchParameters getParams() {
    return params;
  }

  public void setParams(OrgMaprouletteSessionSearchParameters params) {
    this.params = params;
  }

  public OrgMaprouletteFrameworkModelTaskCluster point(OrgMaprouletteFrameworkModelPoint point) {
    this.point = point;
    return this;
  }

   /**
   * Get point
   * @return point
  **/
  @Schema(required = true, description = "")
  public OrgMaprouletteFrameworkModelPoint getPoint() {
    return point;
  }

  public void setPoint(OrgMaprouletteFrameworkModelPoint point) {
    this.point = point;
  }

  public OrgMaprouletteFrameworkModelTaskCluster bounding(String bounding) {
    this.bounding = bounding;
    return this;
  }

   /**
   * Get bounding
   * @return bounding
  **/
  @Schema(required = true, description = "")
  public String getBounding() {
    return bounding;
  }

  public void setBounding(String bounding) {
    this.bounding = bounding;
  }

  public OrgMaprouletteFrameworkModelTaskCluster challengeIds(List<Long> challengeIds) {
    this.challengeIds = challengeIds;
    return this;
  }

  public OrgMaprouletteFrameworkModelTaskCluster addChallengeIdsItem(Long challengeIdsItem) {
    this.challengeIds.add(challengeIdsItem);
    return this;
  }

   /**
   * Get challengeIds
   * @return challengeIds
  **/
  @Schema(required = true, description = "")
  public List<Long> getChallengeIds() {
    return challengeIds;
  }

  public void setChallengeIds(List<Long> challengeIds) {
    this.challengeIds = challengeIds;
  }

  public OrgMaprouletteFrameworkModelTaskCluster geometries(String geometries) {
    this.geometries = geometries;
    return this;
  }

   /**
   * Get geometries
   * @return geometries
  **/
  @Schema(description = "")
  public String getGeometries() {
    return geometries;
  }

  public void setGeometries(String geometries) {
    this.geometries = geometries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgMaprouletteFrameworkModelTaskCluster orgMaprouletteFrameworkModelTaskCluster = (OrgMaprouletteFrameworkModelTaskCluster) o;
    return Objects.equals(this.clusterId, orgMaprouletteFrameworkModelTaskCluster.clusterId) &&
        Objects.equals(this.numberOfPoints, orgMaprouletteFrameworkModelTaskCluster.numberOfPoints) &&
        Objects.equals(this.taskId, orgMaprouletteFrameworkModelTaskCluster.taskId) &&
        Objects.equals(this.taskStatus, orgMaprouletteFrameworkModelTaskCluster.taskStatus) &&
        Objects.equals(this.taskPriority, orgMaprouletteFrameworkModelTaskCluster.taskPriority) &&
        Objects.equals(this.params, orgMaprouletteFrameworkModelTaskCluster.params) &&
        Objects.equals(this.point, orgMaprouletteFrameworkModelTaskCluster.point) &&
        Objects.equals(this.bounding, orgMaprouletteFrameworkModelTaskCluster.bounding) &&
        Objects.equals(this.challengeIds, orgMaprouletteFrameworkModelTaskCluster.challengeIds) &&
        Objects.equals(this.geometries, orgMaprouletteFrameworkModelTaskCluster.geometries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterId, numberOfPoints, taskId, taskStatus, taskPriority, params, point, bounding, challengeIds, geometries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgMaprouletteFrameworkModelTaskCluster {\n");
    
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    numberOfPoints: ").append(toIndentedString(numberOfPoints)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    taskPriority: ").append(toIndentedString(taskPriority)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    point: ").append(toIndentedString(point)).append("\n");
    sb.append("    bounding: ").append(toIndentedString(bounding)).append("\n");
    sb.append("    challengeIds: ").append(toIndentedString(challengeIds)).append("\n");
    sb.append("    geometries: ").append(toIndentedString(geometries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
