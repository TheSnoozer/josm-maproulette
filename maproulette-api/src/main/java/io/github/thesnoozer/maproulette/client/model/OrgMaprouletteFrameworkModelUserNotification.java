/*
 * MapRoulette API
 * API for MapRoulette enabling the creation and maintenance of MapRoulette challenges
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.thesnoozer.maproulette.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OrgMaprouletteFrameworkModelUserNotification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-08T21:39:00.063842+01:00[Europe/Berlin]")
public class OrgMaprouletteFrameworkModelUserNotification {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("userId")
  private Long userId = null;

  @JsonProperty("notificationType")
  private Integer notificationType = null;

  @JsonProperty("created")
  private Integer created = null;

  @JsonProperty("modified")
  private Integer modified = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("fromUsername")
  private String fromUsername = null;

  @JsonProperty("challengeName")
  private String challengeName = null;

  @JsonProperty("isRead")
  private Boolean isRead = null;

  @JsonProperty("emailStatus")
  private Integer emailStatus = null;

  @JsonProperty("taskId")
  private Long taskId = null;

  @JsonProperty("challengeId")
  private Long challengeId = null;

  @JsonProperty("projectId")
  private Long projectId = null;

  @JsonProperty("targetId")
  private Long targetId = null;

  @JsonProperty("extra")
  private String extra = null;

  @JsonProperty("errorTags")
  private String errorTags = null;

  public OrgMaprouletteFrameworkModelUserNotification id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OrgMaprouletteFrameworkModelUserNotification userId(Long userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(required = true, description = "")
  public Long getUserId() {
    return userId;
  }

  public void setUserId(Long userId) {
    this.userId = userId;
  }

  public OrgMaprouletteFrameworkModelUserNotification notificationType(Integer notificationType) {
    this.notificationType = notificationType;
    return this;
  }

   /**
   * Get notificationType
   * @return notificationType
  **/
  @Schema(required = true, description = "")
  public Integer getNotificationType() {
    return notificationType;
  }

  public void setNotificationType(Integer notificationType) {
    this.notificationType = notificationType;
  }

  public OrgMaprouletteFrameworkModelUserNotification created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(required = true, description = "")
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }

  public OrgMaprouletteFrameworkModelUserNotification modified(Integer modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @Schema(required = true, description = "")
  public Integer getModified() {
    return modified;
  }

  public void setModified(Integer modified) {
    this.modified = modified;
  }

  public OrgMaprouletteFrameworkModelUserNotification description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OrgMaprouletteFrameworkModelUserNotification fromUsername(String fromUsername) {
    this.fromUsername = fromUsername;
    return this;
  }

   /**
   * Get fromUsername
   * @return fromUsername
  **/
  @Schema(description = "")
  public String getFromUsername() {
    return fromUsername;
  }

  public void setFromUsername(String fromUsername) {
    this.fromUsername = fromUsername;
  }

  public OrgMaprouletteFrameworkModelUserNotification challengeName(String challengeName) {
    this.challengeName = challengeName;
    return this;
  }

   /**
   * Get challengeName
   * @return challengeName
  **/
  @Schema(description = "")
  public String getChallengeName() {
    return challengeName;
  }

  public void setChallengeName(String challengeName) {
    this.challengeName = challengeName;
  }

  public OrgMaprouletteFrameworkModelUserNotification isRead(Boolean isRead) {
    this.isRead = isRead;
    return this;
  }

   /**
   * Get isRead
   * @return isRead
  **/
  @Schema(required = true, description = "")
  public Boolean isIsRead() {
    return isRead;
  }

  public void setIsRead(Boolean isRead) {
    this.isRead = isRead;
  }

  public OrgMaprouletteFrameworkModelUserNotification emailStatus(Integer emailStatus) {
    this.emailStatus = emailStatus;
    return this;
  }

   /**
   * Get emailStatus
   * @return emailStatus
  **/
  @Schema(required = true, description = "")
  public Integer getEmailStatus() {
    return emailStatus;
  }

  public void setEmailStatus(Integer emailStatus) {
    this.emailStatus = emailStatus;
  }

  public OrgMaprouletteFrameworkModelUserNotification taskId(Long taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @Schema(description = "")
  public Long getTaskId() {
    return taskId;
  }

  public void setTaskId(Long taskId) {
    this.taskId = taskId;
  }

  public OrgMaprouletteFrameworkModelUserNotification challengeId(Long challengeId) {
    this.challengeId = challengeId;
    return this;
  }

   /**
   * Get challengeId
   * @return challengeId
  **/
  @Schema(description = "")
  public Long getChallengeId() {
    return challengeId;
  }

  public void setChallengeId(Long challengeId) {
    this.challengeId = challengeId;
  }

  public OrgMaprouletteFrameworkModelUserNotification projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public OrgMaprouletteFrameworkModelUserNotification targetId(Long targetId) {
    this.targetId = targetId;
    return this;
  }

   /**
   * Get targetId
   * @return targetId
  **/
  @Schema(description = "")
  public Long getTargetId() {
    return targetId;
  }

  public void setTargetId(Long targetId) {
    this.targetId = targetId;
  }

  public OrgMaprouletteFrameworkModelUserNotification extra(String extra) {
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @Schema(description = "")
  public String getExtra() {
    return extra;
  }

  public void setExtra(String extra) {
    this.extra = extra;
  }

  public OrgMaprouletteFrameworkModelUserNotification errorTags(String errorTags) {
    this.errorTags = errorTags;
    return this;
  }

   /**
   * Get errorTags
   * @return errorTags
  **/
  @Schema(required = true, description = "")
  public String getErrorTags() {
    return errorTags;
  }

  public void setErrorTags(String errorTags) {
    this.errorTags = errorTags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgMaprouletteFrameworkModelUserNotification orgMaprouletteFrameworkModelUserNotification = (OrgMaprouletteFrameworkModelUserNotification) o;
    return Objects.equals(this.id, orgMaprouletteFrameworkModelUserNotification.id) &&
        Objects.equals(this.userId, orgMaprouletteFrameworkModelUserNotification.userId) &&
        Objects.equals(this.notificationType, orgMaprouletteFrameworkModelUserNotification.notificationType) &&
        Objects.equals(this.created, orgMaprouletteFrameworkModelUserNotification.created) &&
        Objects.equals(this.modified, orgMaprouletteFrameworkModelUserNotification.modified) &&
        Objects.equals(this.description, orgMaprouletteFrameworkModelUserNotification.description) &&
        Objects.equals(this.fromUsername, orgMaprouletteFrameworkModelUserNotification.fromUsername) &&
        Objects.equals(this.challengeName, orgMaprouletteFrameworkModelUserNotification.challengeName) &&
        Objects.equals(this.isRead, orgMaprouletteFrameworkModelUserNotification.isRead) &&
        Objects.equals(this.emailStatus, orgMaprouletteFrameworkModelUserNotification.emailStatus) &&
        Objects.equals(this.taskId, orgMaprouletteFrameworkModelUserNotification.taskId) &&
        Objects.equals(this.challengeId, orgMaprouletteFrameworkModelUserNotification.challengeId) &&
        Objects.equals(this.projectId, orgMaprouletteFrameworkModelUserNotification.projectId) &&
        Objects.equals(this.targetId, orgMaprouletteFrameworkModelUserNotification.targetId) &&
        Objects.equals(this.extra, orgMaprouletteFrameworkModelUserNotification.extra) &&
        Objects.equals(this.errorTags, orgMaprouletteFrameworkModelUserNotification.errorTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, notificationType, created, modified, description, fromUsername, challengeName, isRead, emailStatus, taskId, challengeId, projectId, targetId, extra, errorTags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgMaprouletteFrameworkModelUserNotification {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fromUsername: ").append(toIndentedString(fromUsername)).append("\n");
    sb.append("    challengeName: ").append(toIndentedString(challengeName)).append("\n");
    sb.append("    isRead: ").append(toIndentedString(isRead)).append("\n");
    sb.append("    emailStatus: ").append(toIndentedString(emailStatus)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    challengeId: ").append(toIndentedString(challengeId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    errorTags: ").append(toIndentedString(errorTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
