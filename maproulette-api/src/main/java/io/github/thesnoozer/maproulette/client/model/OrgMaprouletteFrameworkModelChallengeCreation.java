/*
 * MapRoulette API
 * API for MapRoulette enabling the creation and maintenance of MapRoulette challenges
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.thesnoozer.maproulette.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OrgMaprouletteFrameworkModelChallengeCreation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-08T21:39:00.063842+01:00[Europe/Berlin]")
public class OrgMaprouletteFrameworkModelChallengeCreation {
  @JsonProperty("overpassQL")
  private String overpassQL = null;

  @JsonProperty("remoteGeoJson")
  private String remoteGeoJson = null;

  @JsonProperty("overpassTargetType")
  private String overpassTargetType = null;

  public OrgMaprouletteFrameworkModelChallengeCreation overpassQL(String overpassQL) {
    this.overpassQL = overpassQL;
    return this;
  }

   /**
   * Get overpassQL
   * @return overpassQL
  **/
  @Schema(description = "")
  public String getOverpassQL() {
    return overpassQL;
  }

  public void setOverpassQL(String overpassQL) {
    this.overpassQL = overpassQL;
  }

  public OrgMaprouletteFrameworkModelChallengeCreation remoteGeoJson(String remoteGeoJson) {
    this.remoteGeoJson = remoteGeoJson;
    return this;
  }

   /**
   * Get remoteGeoJson
   * @return remoteGeoJson
  **/
  @Schema(description = "")
  public String getRemoteGeoJson() {
    return remoteGeoJson;
  }

  public void setRemoteGeoJson(String remoteGeoJson) {
    this.remoteGeoJson = remoteGeoJson;
  }

  public OrgMaprouletteFrameworkModelChallengeCreation overpassTargetType(String overpassTargetType) {
    this.overpassTargetType = overpassTargetType;
    return this;
  }

   /**
   * Get overpassTargetType
   * @return overpassTargetType
  **/
  @Schema(description = "")
  public String getOverpassTargetType() {
    return overpassTargetType;
  }

  public void setOverpassTargetType(String overpassTargetType) {
    this.overpassTargetType = overpassTargetType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgMaprouletteFrameworkModelChallengeCreation orgMaprouletteFrameworkModelChallengeCreation = (OrgMaprouletteFrameworkModelChallengeCreation) o;
    return Objects.equals(this.overpassQL, orgMaprouletteFrameworkModelChallengeCreation.overpassQL) &&
        Objects.equals(this.remoteGeoJson, orgMaprouletteFrameworkModelChallengeCreation.remoteGeoJson) &&
        Objects.equals(this.overpassTargetType, orgMaprouletteFrameworkModelChallengeCreation.overpassTargetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overpassQL, remoteGeoJson, overpassTargetType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgMaprouletteFrameworkModelChallengeCreation {\n");
    
    sb.append("    overpassQL: ").append(toIndentedString(overpassQL)).append("\n");
    sb.append("    remoteGeoJson: ").append(toIndentedString(remoteGeoJson)).append("\n");
    sb.append("    overpassTargetType: ").append(toIndentedString(overpassTargetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
