/*
 * MapRoulette API
 * API for MapRoulette enabling the creation and maintenance of MapRoulette challenges
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.thesnoozer.maproulette.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * OrgMaprouletteSessionSearchChallengeParameters
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-08T21:39:00.063842+01:00[Europe/Berlin]")
public class OrgMaprouletteSessionSearchChallengeParameters {
  @JsonProperty("challengeIds")
  private List<Long> challengeIds = null;

  @JsonProperty("challengeTags")
  private List<String> challengeTags = null;

  @JsonProperty("challengeTagConjunction")
  private Boolean challengeTagConjunction = null;

  @JsonProperty("challengeSearch")
  private String challengeSearch = null;

  @JsonProperty("challengeEnabled")
  private Boolean challengeEnabled = null;

  @JsonProperty("challengeDifficulty")
  private Integer challengeDifficulty = null;

  @JsonProperty("challengeStatus")
  private List<Integer> challengeStatus = null;

  @JsonProperty("requiresLocal")
  private Integer requiresLocal = null;

  @JsonProperty("archived")
  private Boolean archived = null;

  public OrgMaprouletteSessionSearchChallengeParameters challengeIds(List<Long> challengeIds) {
    this.challengeIds = challengeIds;
    return this;
  }

  public OrgMaprouletteSessionSearchChallengeParameters addChallengeIdsItem(Long challengeIdsItem) {
    if (this.challengeIds == null) {
      this.challengeIds = new ArrayList<>();
    }
    this.challengeIds.add(challengeIdsItem);
    return this;
  }

   /**
   * Get challengeIds
   * @return challengeIds
  **/
  @Schema(description = "")
  public List<Long> getChallengeIds() {
    return challengeIds;
  }

  public void setChallengeIds(List<Long> challengeIds) {
    this.challengeIds = challengeIds;
  }

  public OrgMaprouletteSessionSearchChallengeParameters challengeTags(List<String> challengeTags) {
    this.challengeTags = challengeTags;
    return this;
  }

  public OrgMaprouletteSessionSearchChallengeParameters addChallengeTagsItem(String challengeTagsItem) {
    if (this.challengeTags == null) {
      this.challengeTags = new ArrayList<>();
    }
    this.challengeTags.add(challengeTagsItem);
    return this;
  }

   /**
   * Get challengeTags
   * @return challengeTags
  **/
  @Schema(description = "")
  public List<String> getChallengeTags() {
    return challengeTags;
  }

  public void setChallengeTags(List<String> challengeTags) {
    this.challengeTags = challengeTags;
  }

  public OrgMaprouletteSessionSearchChallengeParameters challengeTagConjunction(Boolean challengeTagConjunction) {
    this.challengeTagConjunction = challengeTagConjunction;
    return this;
  }

   /**
   * Get challengeTagConjunction
   * @return challengeTagConjunction
  **/
  @Schema(description = "")
  public Boolean isChallengeTagConjunction() {
    return challengeTagConjunction;
  }

  public void setChallengeTagConjunction(Boolean challengeTagConjunction) {
    this.challengeTagConjunction = challengeTagConjunction;
  }

  public OrgMaprouletteSessionSearchChallengeParameters challengeSearch(String challengeSearch) {
    this.challengeSearch = challengeSearch;
    return this;
  }

   /**
   * Get challengeSearch
   * @return challengeSearch
  **/
  @Schema(description = "")
  public String getChallengeSearch() {
    return challengeSearch;
  }

  public void setChallengeSearch(String challengeSearch) {
    this.challengeSearch = challengeSearch;
  }

  public OrgMaprouletteSessionSearchChallengeParameters challengeEnabled(Boolean challengeEnabled) {
    this.challengeEnabled = challengeEnabled;
    return this;
  }

   /**
   * Get challengeEnabled
   * @return challengeEnabled
  **/
  @Schema(description = "")
  public Boolean isChallengeEnabled() {
    return challengeEnabled;
  }

  public void setChallengeEnabled(Boolean challengeEnabled) {
    this.challengeEnabled = challengeEnabled;
  }

  public OrgMaprouletteSessionSearchChallengeParameters challengeDifficulty(Integer challengeDifficulty) {
    this.challengeDifficulty = challengeDifficulty;
    return this;
  }

   /**
   * Get challengeDifficulty
   * @return challengeDifficulty
  **/
  @Schema(description = "")
  public Integer getChallengeDifficulty() {
    return challengeDifficulty;
  }

  public void setChallengeDifficulty(Integer challengeDifficulty) {
    this.challengeDifficulty = challengeDifficulty;
  }

  public OrgMaprouletteSessionSearchChallengeParameters challengeStatus(List<Integer> challengeStatus) {
    this.challengeStatus = challengeStatus;
    return this;
  }

  public OrgMaprouletteSessionSearchChallengeParameters addChallengeStatusItem(Integer challengeStatusItem) {
    if (this.challengeStatus == null) {
      this.challengeStatus = new ArrayList<>();
    }
    this.challengeStatus.add(challengeStatusItem);
    return this;
  }

   /**
   * Get challengeStatus
   * @return challengeStatus
  **/
  @Schema(description = "")
  public List<Integer> getChallengeStatus() {
    return challengeStatus;
  }

  public void setChallengeStatus(List<Integer> challengeStatus) {
    this.challengeStatus = challengeStatus;
  }

  public OrgMaprouletteSessionSearchChallengeParameters requiresLocal(Integer requiresLocal) {
    this.requiresLocal = requiresLocal;
    return this;
  }

   /**
   * Get requiresLocal
   * @return requiresLocal
  **/
  @Schema(description = "")
  public Integer getRequiresLocal() {
    return requiresLocal;
  }

  public void setRequiresLocal(Integer requiresLocal) {
    this.requiresLocal = requiresLocal;
  }

  public OrgMaprouletteSessionSearchChallengeParameters archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @Schema(description = "")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgMaprouletteSessionSearchChallengeParameters orgMaprouletteSessionSearchChallengeParameters = (OrgMaprouletteSessionSearchChallengeParameters) o;
    return Objects.equals(this.challengeIds, orgMaprouletteSessionSearchChallengeParameters.challengeIds) &&
        Objects.equals(this.challengeTags, orgMaprouletteSessionSearchChallengeParameters.challengeTags) &&
        Objects.equals(this.challengeTagConjunction, orgMaprouletteSessionSearchChallengeParameters.challengeTagConjunction) &&
        Objects.equals(this.challengeSearch, orgMaprouletteSessionSearchChallengeParameters.challengeSearch) &&
        Objects.equals(this.challengeEnabled, orgMaprouletteSessionSearchChallengeParameters.challengeEnabled) &&
        Objects.equals(this.challengeDifficulty, orgMaprouletteSessionSearchChallengeParameters.challengeDifficulty) &&
        Objects.equals(this.challengeStatus, orgMaprouletteSessionSearchChallengeParameters.challengeStatus) &&
        Objects.equals(this.requiresLocal, orgMaprouletteSessionSearchChallengeParameters.requiresLocal) &&
        Objects.equals(this.archived, orgMaprouletteSessionSearchChallengeParameters.archived);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challengeIds, challengeTags, challengeTagConjunction, challengeSearch, challengeEnabled, challengeDifficulty, challengeStatus, requiresLocal, archived);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgMaprouletteSessionSearchChallengeParameters {\n");
    
    sb.append("    challengeIds: ").append(toIndentedString(challengeIds)).append("\n");
    sb.append("    challengeTags: ").append(toIndentedString(challengeTags)).append("\n");
    sb.append("    challengeTagConjunction: ").append(toIndentedString(challengeTagConjunction)).append("\n");
    sb.append("    challengeSearch: ").append(toIndentedString(challengeSearch)).append("\n");
    sb.append("    challengeEnabled: ").append(toIndentedString(challengeEnabled)).append("\n");
    sb.append("    challengeDifficulty: ").append(toIndentedString(challengeDifficulty)).append("\n");
    sb.append("    challengeStatus: ").append(toIndentedString(challengeStatus)).append("\n");
    sb.append("    requiresLocal: ").append(toIndentedString(requiresLocal)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
