/*
 * MapRoulette API
 * API for MapRoulette enabling the creation and maintenance of MapRoulette challenges
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.thesnoozer.maproulette.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Keyword
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-08T21:39:00.063842+01:00[Europe/Berlin]")
public class Keyword {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("created")
  private Integer created = null;

  @JsonProperty("modified")
  private Integer modified = null;

  @JsonProperty("tagType")
  private String tagType = "challenges";

   /**
   * The identifier of the Keyword
   * @return id
  **/
  @Schema(description = "The identifier of the Keyword")
  public Long getId() {
    return id;
  }

  public Keyword name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The keyword name
   * @return name
  **/
  @Schema(required = true, description = "The keyword name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Keyword description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description for the keyword
   * @return description
  **/
  @Schema(description = "The description for the keyword")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public Integer getCreated() {
    return created;
  }

   /**
   * Get modified
   * @return modified
  **/
  @Schema(description = "")
  public Integer getModified() {
    return modified;
  }

  public Keyword tagType(String tagType) {
    this.tagType = tagType;
    return this;
  }

   /**
   * The type of object that the keyword is associated with
   * @return tagType
  **/
  @Schema(description = "The type of object that the keyword is associated with")
  public String getTagType() {
    return tagType;
  }

  public void setTagType(String tagType) {
    this.tagType = tagType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Keyword keyword = (Keyword) o;
    return Objects.equals(this.id, keyword.id) &&
        Objects.equals(this.name, keyword.name) &&
        Objects.equals(this.description, keyword.description) &&
        Objects.equals(this.created, keyword.created) &&
        Objects.equals(this.modified, keyword.modified) &&
        Objects.equals(this.tagType, keyword.tagType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, created, modified, tagType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Keyword {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    tagType: ").append(toIndentedString(tagType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
