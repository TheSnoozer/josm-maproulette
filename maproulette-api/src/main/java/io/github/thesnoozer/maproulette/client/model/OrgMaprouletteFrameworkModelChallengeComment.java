/*
 * MapRoulette API
 * API for MapRoulette enabling the creation and maintenance of MapRoulette challenges
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.github.thesnoozer.maproulette.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * OrgMaprouletteFrameworkModelChallengeComment
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-11-08T21:39:00.063842+01:00[Europe/Berlin]")
public class OrgMaprouletteFrameworkModelChallengeComment {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("osm_id")
  private Long osmId = null;

  @JsonProperty("osm_username")
  private String osmUsername = null;

  @JsonProperty("avatarUrl")
  private String avatarUrl = null;

  @JsonProperty("challengeId")
  private Long challengeId = null;

  @JsonProperty("projectId")
  private Long projectId = null;

  @JsonProperty("created")
  private Integer created = null;

  @JsonProperty("comment")
  private String comment = null;

  public OrgMaprouletteFrameworkModelChallengeComment id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OrgMaprouletteFrameworkModelChallengeComment osmId(Long osmId) {
    this.osmId = osmId;
    return this;
  }

   /**
   * Get osmId
   * @return osmId
  **/
  @Schema(required = true, description = "")
  public Long getOsmId() {
    return osmId;
  }

  public void setOsmId(Long osmId) {
    this.osmId = osmId;
  }

  public OrgMaprouletteFrameworkModelChallengeComment osmUsername(String osmUsername) {
    this.osmUsername = osmUsername;
    return this;
  }

   /**
   * Get osmUsername
   * @return osmUsername
  **/
  @Schema(required = true, description = "")
  public String getOsmUsername() {
    return osmUsername;
  }

  public void setOsmUsername(String osmUsername) {
    this.osmUsername = osmUsername;
  }

  public OrgMaprouletteFrameworkModelChallengeComment avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * Get avatarUrl
   * @return avatarUrl
  **/
  @Schema(required = true, description = "")
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public OrgMaprouletteFrameworkModelChallengeComment challengeId(Long challengeId) {
    this.challengeId = challengeId;
    return this;
  }

   /**
   * Get challengeId
   * @return challengeId
  **/
  @Schema(required = true, description = "")
  public Long getChallengeId() {
    return challengeId;
  }

  public void setChallengeId(Long challengeId) {
    this.challengeId = challengeId;
  }

  public OrgMaprouletteFrameworkModelChallengeComment projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(required = true, description = "")
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }

  public OrgMaprouletteFrameworkModelChallengeComment created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(required = true, description = "")
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }

  public OrgMaprouletteFrameworkModelChallengeComment comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(required = true, description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgMaprouletteFrameworkModelChallengeComment orgMaprouletteFrameworkModelChallengeComment = (OrgMaprouletteFrameworkModelChallengeComment) o;
    return Objects.equals(this.id, orgMaprouletteFrameworkModelChallengeComment.id) &&
        Objects.equals(this.osmId, orgMaprouletteFrameworkModelChallengeComment.osmId) &&
        Objects.equals(this.osmUsername, orgMaprouletteFrameworkModelChallengeComment.osmUsername) &&
        Objects.equals(this.avatarUrl, orgMaprouletteFrameworkModelChallengeComment.avatarUrl) &&
        Objects.equals(this.challengeId, orgMaprouletteFrameworkModelChallengeComment.challengeId) &&
        Objects.equals(this.projectId, orgMaprouletteFrameworkModelChallengeComment.projectId) &&
        Objects.equals(this.created, orgMaprouletteFrameworkModelChallengeComment.created) &&
        Objects.equals(this.comment, orgMaprouletteFrameworkModelChallengeComment.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, osmId, osmUsername, avatarUrl, challengeId, projectId, created, comment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgMaprouletteFrameworkModelChallengeComment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    osmId: ").append(toIndentedString(osmId)).append("\n");
    sb.append("    osmUsername: ").append(toIndentedString(osmUsername)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    challengeId: ").append(toIndentedString(challengeId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
